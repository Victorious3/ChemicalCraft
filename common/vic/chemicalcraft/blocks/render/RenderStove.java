package vic.chemicalcraft.blocks.render;

import net.minecraft.client.Minecraft;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.tileentity.TileEntity;
import net.minecraftforge.common.ForgeDirection;

import org.lwjgl.opengl.GL11;

import vic.chemicalcraft.blocks.tileentity.TileEntityHeatProducer;
import vic.chemicalcraft.proxy.CommonProxy;

public class RenderStove extends TileEntitySpecialRenderer 
{
	ModelStove modelStove = new ModelStove();
	
	@Override
	public void renderTileEntityAt(TileEntity tileentity, double d, double d1, double d2, float f) {
		
		int rotation = 90;        
        
		ForgeDirection var1 = ForgeDirection.SOUTH;
        if (tileentity != null)
        {
        	if(tileentity.worldObj != null)
        	{
        		var1 = ForgeDirection.getOrientation(((TileEntityHeatProducer)tileentity).orientation);
        	}  	
        }
    	
        switch (var1)
        {
    	case NORTH : rotation = 0; break;
    	case SOUTH : rotation = 180; break;
    	case WEST : rotation = 270; break;
    	case EAST : rotation = 90; break;
		default: break;
        }
    	
        GL11.glPushMatrix();
        GL11.glTranslatef((float)d + 0.5F, (float)d1 + 1.5F, (float)d2 + 0.5F);
        GL11.glRotatef(180, 0F, 0F, 1F);
        GL11.glRotatef(rotation, 0F, 1F, 0F);
       
        Minecraft.getMinecraft().renderEngine.bindTexture(CommonProxy.TEX_STOVE);    
        modelStove.renderModel(0.0625F);    
        GL11.glPopMatrix(); 		
	}
	

	public static class ModelStove extends ModelBase
	{
		// Date: 11.03.2013 20:00:56
		// Template version 1.1
		// Java generated by Techne
		// Keep in mind that you still need to fill in some blanks
		// - ZeuX
		
		//fields
	    ModelRenderer main;
	    ModelRenderer backplane;
	    ModelRenderer slot;
	    ModelRenderer smokestack1;
	    ModelRenderer smokestack2;
	    ModelRenderer post1;
	    ModelRenderer post2;
	    ModelRenderer post3;
	    ModelRenderer post4;
	    ModelRenderer topplane;
	    ModelRenderer pipe1;
	    ModelRenderer pipe2;
	    ModelRenderer pipe3;
	  
	  public ModelStove()
	  {
		  textureWidth = 64;
		  textureHeight = 32;
	    
	      main = new ModelRenderer(this, 32, 16);
	      main.addBox(0F, 0F, 0F, 12, 12, 4);
	      main.setRotationPoint(-6F, 10F, -7F);
	      main.setTextureSize(64, 32);
	      main.mirror = true;
	      setRotation(main, 0F, 0F, 0F);
	      backplane = new ModelRenderer(this, 34, 0);
	      backplane.addBox(0F, 0F, 0F, 14, 14, 1);
	      backplane.setRotationPoint(-7F, 9F, -8F);
	      backplane.setTextureSize(64, 32);
	      backplane.mirror = true;
	      setRotation(backplane, 0F, 0F, 0F);
	      slot = new ModelRenderer(this, 0, 11);
	      slot.addBox(0F, 0F, 0F, 7, 7, 2);
	      slot.setRotationPoint(-2F, 14F, -4F);
	      slot.setTextureSize(64, 32);
	      slot.mirror = true;
	      setRotation(slot, 0F, 0F, 0F);
	      smokestack1 = new ModelRenderer(this, 12, 20);
	      smokestack1.addBox(0F, 0F, 0F, 3, 9, 3);
	      smokestack1.setRotationPoint(-8F, 6F, -5F);
	      smokestack1.setTextureSize(64, 32);
	      smokestack1.mirror = true;
	      setRotation(smokestack1, 0F, 0F, 0F);
	      smokestack2 = new ModelRenderer(this, 0, 21);
	      smokestack2.addBox(0F, 0F, -0.1F, 3, 8, 3);
	      smokestack2.setRotationPoint(-8F, 15F, -5F);
	      smokestack2.setTextureSize(64, 32);
	      smokestack2.mirror = true;
	      setRotation(smokestack2, 0F, 0F, -0.8552113F);
	      post1 = new ModelRenderer(this, 0, 8);
	      post1.addBox(0F, 0F, 0F, 1, 2, 1);
	      post1.setRotationPoint(-8F, 4F, -3F);
	      post1.setTextureSize(64, 32);
	      post1.mirror = true;
	      setRotation(post1, 0F, 0F, 0F);
	      post2 = new ModelRenderer(this, 4, 8);
	      post2.addBox(0F, 0F, 0F, 1, 2, 1);
	      post2.setRotationPoint(-6F, 4F, -5F);
	      post2.setTextureSize(64, 32);
	      post2.mirror = true;
	      setRotation(post2, 0F, 0F, 0F);
	      post3 = new ModelRenderer(this, 8, 8);
	      post3.addBox(0F, 0F, 0F, 1, 2, 1);
	      post3.setRotationPoint(-6F, 4F, -3F);
	      post3.setTextureSize(64, 32);
	      post3.mirror = true;
	      setRotation(post3, 0F, 0F, 0F);
	      post4 = new ModelRenderer(this, 12, 8);
	      post4.addBox(0F, 0F, 0F, 1, 2, 1);
	      post4.setRotationPoint(-8F, 4F, -5F);
	      post4.setTextureSize(64, 32);
	      post4.mirror = true;
	      setRotation(post4, 0F, 0F, 0F);
	      topplane = new ModelRenderer(this, 14, 0);
	      topplane.addBox(0F, 0F, 0F, 5, 0, 5);
	      topplane.setRotationPoint(-9F, 4F, -6F);
	      topplane.setTextureSize(64, 32);
	      topplane.mirror = true;
	      setRotation(topplane, 0F, 0F, 0F);
	      pipe1 = new ModelRenderer(this, 26, 26);
	      pipe1.addBox(0F, 0F, 0F, 1, 4, 1);
	      pipe1.setRotationPoint(3F, 10F, -3F);
	      pipe1.setTextureSize(64, 32);
	      pipe1.mirror = true;
	      setRotation(pipe1, 0F, 0F, 0F);
	      pipe2 = new ModelRenderer(this, 16, 5);
	      pipe2.addBox(0F, 0F, 0F, 8, 1, 1);
	      pipe2.setRotationPoint(-5F, 9F, -5F);
	      pipe2.setTextureSize(64, 32);
	      pipe2.mirror = true;
	      setRotation(pipe2, 0F, 0F, 0F);
	      pipe3 = new ModelRenderer(this, 0, 0);
	      pipe3.addBox(0F, 0F, 0F, 1, 1, 3);
	      pipe3.setRotationPoint(3F, 9F, -5F);
	      pipe3.setTextureSize(64, 32);
	      pipe3.mirror = true;
	      setRotation(pipe3, 0F, 0F, 0F);
	  }
	  
	  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	  {
		  super.render(entity, f, f1, f2, f3, f4, f5);
		  setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		  renderModel(f5);
	  }
	  
	  public void renderModel(float f5)
	  {
		  main.render(f5);
		  backplane.render(f5);
		  slot.render(f5);
		  smokestack1.render(f5);
		  smokestack2.render(f5);
		  post1.render(f5);
		  post2.render(f5);
		  post3.render(f5);
		  post4.render(f5);
		  topplane.render(f5);
		  pipe1.render(f5);
		  pipe2.render(f5);
		  pipe3.render(f5);
	  }
	  
	  private void setRotation(ModelRenderer model, float x, float y, float z)
	  {
		  model.rotateAngleX = x;
		  model.rotateAngleY = y;
		  model.rotateAngleZ = z;
	  }
	  
	  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e1)
	  {
		  super.setRotationAngles(f, f1, f2, f3, f4, f5, e1);
	  }

	}
	
}
