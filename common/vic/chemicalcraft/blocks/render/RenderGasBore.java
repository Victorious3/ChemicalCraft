package vic.chemicalcraft.blocks.render;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.tileentity.TileEntity;
import net.minecraftforge.client.ForgeHooksClient;
import net.minecraftforge.common.ForgeDirection;

import org.lwjgl.opengl.GL11;

import vic.chemicalcraft.blocks.tileentity.TileEntityGasBore;
import vic.chemicalcraft.proxy.CommonProxy;

public class RenderGasBore extends TileEntitySpecialRenderer {
	
	ModelGasBore modelGasBore = new ModelGasBore();
	
	@Override
	public void renderTileEntityAt(TileEntity tileentity, double d, double d1, double d2, float f) {
		
		int rotation = 90;        
        
		ForgeDirection var1 = ForgeDirection.NORTH;
        if (tileentity != null)
        {
        	if(tileentity.worldObj != null)
        	{
        		var1 = ForgeDirection.getOrientation(((TileEntityGasBore)tileentity).orientation);
        	}  	
        }
    	
        switch (var1)
        {
    	case NORTH : rotation = 0; break;
    	case SOUTH : rotation = 180; break;
    	case WEST : rotation = 270; break;
    	case EAST : rotation = 90; break;
		default: break;
        }
    	
        GL11.glPushMatrix();
        GL11.glTranslatef((float)d + 0.5F, (float)d1 + 1.5F, (float)d2 + 0.5F);
        GL11.glRotatef(180, 0F, 0F, 1F);
        GL11.glRotatef(rotation, 0F, 1F, 0F);
        ForgeHooksClient.bindTexture(CommonProxy.TEX_GASBORE, 0);    
        modelGasBore.renderModel(0.0625F);    
        GL11.glPopMatrix(); 
		
	}
	
	public static class ModelGasBore extends ModelBase
	{
		// Date: 03.03.2013 15:13:44
		// Template version 1.1
		// Java generated by Techne
		// Keep in mind that you still need to fill in some blanks
		// - ZeuX
		
		//fields
	    ModelRenderer Bottom1;
	    ModelRenderer Bottom2;
	    ModelRenderer Bottom3;
	    ModelRenderer Bottom4;
	    ModelRenderer BottomDown1;
	    ModelRenderer BottomDown2;
	    ModelRenderer BottomDown3;
	    ModelRenderer BottomDown4;
	    ModelRenderer DrillTop;
	    ModelRenderer DrillMain;
	    ModelRenderer DrillHead;
	    ModelRenderer Leg1;
	    ModelRenderer Leg2;
	    ModelRenderer Leg3;
	    ModelRenderer Leg4;
	    ModelRenderer ControlScreen;
	    ModelRenderer ControlPost1;
	    ModelRenderer ControlPost2;
	    ModelRenderer TankOutside;
	    ModelRenderer TankInside;
	    ModelRenderer Pipe1;
	    ModelRenderer Pipe2;
	    ModelRenderer Pipe3;
	    ModelRenderer EnergyConnector;
	    ModelRenderer EnergyBackplane;
	    ModelRenderer EnergyWire;
	  
	  public ModelGasBore()
	  {
	      textureWidth = 64;
	      textureHeight = 64;
    
	      Bottom1 = new ModelRenderer(this, 0, 48);
	      Bottom1.addBox(0F, 0F, 0F, 4, 2, 14);
	      Bottom1.setRotationPoint(3F, 22F, -7F);
	      Bottom1.setTextureSize(64, 64);
	      Bottom1.mirror = true;
	      setRotation(Bottom1, 0F, 0F, 0F);
	      Bottom2 = new ModelRenderer(this, 0, 32);
	      Bottom2.addBox(0F, 0F, 0F, 4, 2, 14);
	      Bottom2.setRotationPoint(-7F, 22F, -7F);
	      Bottom2.setTextureSize(64, 64);
	      Bottom2.mirror = true;
	      setRotation(Bottom2, 0F, 0F, 0F);
	      Bottom3 = new ModelRenderer(this, 36, 58);
	      Bottom3.addBox(0F, 0F, 0F, 6, 2, 4);
	      Bottom3.setRotationPoint(-3F, 22F, -7F);
	      Bottom3.setTextureSize(64, 64);
	      Bottom3.mirror = true;
	      setRotation(Bottom3, 0F, 0F, 0F);
	      Bottom4 = new ModelRenderer(this, 36, 52);
	      Bottom4.addBox(0F, 0F, 0F, 6, 2, 4);
	      Bottom4.setRotationPoint(-3F, 22F, 3F);
	      Bottom4.setTextureSize(64, 64);
	      Bottom4.mirror = true;
	      setRotation(Bottom4, 0F, 0F, 0F);
	      BottomDown1 = new ModelRenderer(this, 36, 46);
	      BottomDown1.addBox(0F, 0F, 4F, 3, 1, 5);
	      BottomDown1.setRotationPoint(-3F, 23F, -6F);
	      BottomDown1.setTextureSize(64, 64);
	      BottomDown1.mirror = true;
	      setRotation(BottomDown1, 0F, 0.7853982F, 0F);
	      BottomDown2 = new ModelRenderer(this, 36, 42);
	      BottomDown2.addBox(2F, 0F, 2F, 5, 1, 3);
	      BottomDown2.setRotationPoint(-8F, 23F, -2F);
	      BottomDown2.setTextureSize(64, 64);
	      BottomDown2.mirror = true;
	      setRotation(BottomDown2, 0F, 0.7853982F, 0F);
	      BottomDown3 = new ModelRenderer(this, 36, 38);
	      BottomDown3.addBox(1F, 0F, 0F, 5, 1, 3);
	      BottomDown3.setRotationPoint(-1F, 23F, 4F);
	      BottomDown3.setTextureSize(64, 64);
	      BottomDown3.mirror = true;
	      setRotation(BottomDown3, 0F, 0.7853982F, 0F);
	      BottomDown4 = new ModelRenderer(this, 36, 32);
	      BottomDown4.addBox(2F, 0F, 3F, 3, 1, 5);
	      BottomDown4.setRotationPoint(-9F, 23F, 1F);
	      BottomDown4.setTextureSize(64, 64);
	      BottomDown4.mirror = true;
	      setRotation(BottomDown4, 0F, 0.7853982F, 0F);
	      DrillTop = new ModelRenderer(this, 0, 27);
	      DrillTop.addBox(0F, 0F, 0F, 4, 1, 4);
	      DrillTop.setRotationPoint(-2F, 9F, -2F);
	      DrillTop.setTextureSize(64, 64);
	      DrillTop.mirror = true;
	      setRotation(DrillTop, 0F, 0F, 0F);
	      DrillMain = new ModelRenderer(this, 56, 0);
	      DrillMain.addBox(0F, 0F, 0F, 2, 14, 2);
	      DrillMain.setRotationPoint(-1F, 10F, -1F);
	      DrillMain.setTextureSize(64, 64);
	      DrillMain.mirror = true;
	      setRotation(DrillMain, 0F, 0F, 0F);
	      DrillHead = new ModelRenderer(this, 16, 27);
	      DrillHead.addBox(0F, 0F, -2F, 4, 1, 4);
	      DrillHead.setRotationPoint(-2F, 21F, 0F);
	      DrillHead.setTextureSize(64, 64);
	      DrillHead.mirror = true;
	      setRotation(DrillHead, 0F, 0F, 0F);
	      Leg1 = new ModelRenderer(this, 51, 0);
	      Leg1.addBox(-4F, 0F, -4F, 1, 14, 1);
	      Leg1.setRotationPoint(5F, 8F, 5F);
	      Leg1.setTextureSize(64, 64);
	      Leg1.mirror = true;
	      setRotation(Leg1, 0.2443461F, 0F, -0.2792527F);
	      Leg2 = new ModelRenderer(this, 49, 0);
	      Leg2.addBox(4F, 0F, -4F, 1, 14, 1);
	      Leg2.setRotationPoint(-6F, 8F, 5F);
	      Leg2.setTextureSize(64, 64);
	      Leg2.mirror = true;
	      setRotation(Leg2, 0.2443461F, 0F, 0.2617994F);
	      Leg3 = new ModelRenderer(this, 45, 0);
	      Leg3.addBox(-4F, 0F, 4F, 1, 14, 1);
	      Leg3.setRotationPoint(5F, 8F, -6F);
	      Leg3.setTextureSize(64, 64);
	      Leg3.mirror = true;
	      setRotation(Leg3, -0.2443461F, 0F, -0.2443461F);
	      Leg4 = new ModelRenderer(this, 41, 0);
	      Leg4.addBox(4F, 0F, 4F, 1, 14, 1);
	      Leg4.setRotationPoint(-6F, 8F, -6F);
	      Leg4.setTextureSize(64, 64);
	      Leg4.mirror = true;
	      setRotation(Leg4, -0.2443461F, 0F, 0.2443461F);
	      ControlScreen = new ModelRenderer(this, 32, 22);
	      ControlScreen.addBox(0F, -2F, 0F, 6, 4, 1);
	      ControlScreen.setRotationPoint(-3F, 19.4F, -7F);
	      ControlScreen.setTextureSize(64, 64);
	      ControlScreen.mirror = true;
	      setRotation(ControlScreen, -1.047198F, 0F, 0F);
	      ControlPost1 = new ModelRenderer(this, 52, 26);
	      ControlPost1.addBox(0F, 0F, 0F, 1, 4, 2);
	      ControlPost1.setRotationPoint(1F, 20F, -8F);
	      ControlPost1.setTextureSize(64, 64);
	      ControlPost1.mirror = true;
	      setRotation(ControlPost1, 0F, 0F, 0F);
	      ControlPost2 = new ModelRenderer(this, 52, 32);
	      ControlPost2.addBox(0F, 0F, 0F, 1, 4, 2);
	      ControlPost2.setRotationPoint(-2F, 20F, -8F);
	      ControlPost2.setTextureSize(64, 64);
	      ControlPost2.mirror = true;
	      setRotation(ControlPost2, 0F, 0F, 0F);
	      TankOutside = new ModelRenderer(this, 29, 0);
	      TankOutside.addBox(0F, 0F, 0F, 3, 7, 3);
	      TankOutside.setRotationPoint(4F, 15F, -3F);
	      TankOutside.setTextureSize(64, 64);
	      TankOutside.mirror = true;
	      setRotation(TankOutside, 0F, 0F, 0F);
	      TankInside = new ModelRenderer(this, 29, 10);
	      TankInside.addBox(0F, 0F, 0F, 3, 7, 3);
	      TankInside.setRotationPoint(4F, 15F, -3F);
	      TankInside.setTextureSize(64, 64);
	      TankInside.mirror = true;
	      setRotation(TankInside, 0F, 0F, 0F);
	      Pipe1 = new ModelRenderer(this, 15, 0);
	      Pipe1.addBox(0F, 0F, 0F, 6, 1, 1);
	      Pipe1.setRotationPoint(-1F, 8F, 0F);
	      Pipe1.setTextureSize(64, 64);
	      Pipe1.mirror = true;
	      setRotation(Pipe1, 0F, 0F, 0F);
	      Pipe2 = new ModelRenderer(this, 25, 2);
	      Pipe2.addBox(0F, 0F, 0F, 1, 9, 1);
	      Pipe2.setRotationPoint(5F, 8F, -2F);
	      Pipe2.setTextureSize(64, 64);
	      Pipe2.mirror = true;
	      setRotation(Pipe2, 0F, 0F, 0F);
	      Pipe3 = new ModelRenderer(this, 19, 2);
	      Pipe3.addBox(0F, 0F, 0F, 1, 1, 2);
	      Pipe3.setRotationPoint(5F, 8F, -1F);
	      Pipe3.setTextureSize(64, 64);
	      Pipe3.mirror = true;
	      setRotation(Pipe3, 0F, 0F, 0F);
	      EnergyConnector = new ModelRenderer(this, 0, 15);
	      EnergyConnector.addBox(0F, 0F, 0F, 6, 11, 1);
	      EnergyConnector.setRotationPoint(-3F, 13F, 7F);
	      EnergyConnector.setTextureSize(64, 64);
	      EnergyConnector.mirror = true;
	      setRotation(EnergyConnector, 0F, 0F, 0F);
	      EnergyBackplane = new ModelRenderer(this, 0, 10);
	      EnergyBackplane.addBox(0F, 0F, 0F, 4, 4, 1);
	      EnergyBackplane.setRotationPoint(-2F, 15F, 6F);
	      EnergyBackplane.setTextureSize(64, 64);
	      EnergyBackplane.mirror = true;
	      setRotation(EnergyBackplane, 0F, 0F, 0F);
	      EnergyWire = new ModelRenderer(this, 0, 0);
	      EnergyWire.addBox(0F, 0F, 0F, 1, 7, 1);
	      EnergyWire.setRotationPoint(-3F, 15F, 6F);
	      EnergyWire.setTextureSize(64, 64);
	      EnergyWire.mirror = true;
	      setRotation(EnergyWire, 0F, 0F, 0F);
	  }
	  
	  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	  {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		renderModel(f5);
		
	  }
	  
	  public void renderModel(float f5)
	  {
		  Bottom1.render(f5);
		  Bottom2.render(f5);
		  Bottom3.render(f5);
		  Bottom4.render(f5);
		  BottomDown1.render(f5);
		  BottomDown2.render(f5);
		  BottomDown3.render(f5);
		  BottomDown4.render(f5);
		  DrillTop.render(f5);
		  DrillMain.render(f5);
		  DrillHead.render(f5);
		  Leg1.render(f5);
		  Leg2.render(f5);
		  Leg3.render(f5);
		  Leg4.render(f5);
		  ControlScreen.render(f5);
		  ControlPost1.render(f5);
		  ControlPost2.render(f5);
		  TankOutside.render(f5);
		  TankInside.render(f5);
		  Pipe1.render(f5);
		  Pipe2.render(f5);
		  Pipe3.render(f5);
		  EnergyConnector.render(f5);
		  EnergyBackplane.render(f5);
		  EnergyWire.render(f5);
	  }
	  
	  private void setRotation(ModelRenderer model, float x, float y, float z)
	  {
	    model.rotateAngleX = x;
	    model.rotateAngleY = y;
	    model.rotateAngleZ = z;
	  }
	  
	  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e1)
	  {
	    super.setRotationAngles(f, f1, f2, f3, f4, f5, e1);
	  }

	}

}
